(function() {
  if ('require' in window) {
    require("discourse/lib/theme-settings-store").registerSettings(7, {"show_for_members":true,"show_for_anon":true,"display_on_mobile":true,"display_on_desktop":true,"display_on_homepage":true,"url_must_contain":"/latest|/categories|/new|/unread|/top*|/tag/*|/tags/*|/c/*|/t/*","dismissible":false,"collapsible":false,"default_collapsed_state":"expanded","cookie_lifespan":"none","cookie_name":"v1","full_width_banner":false,"swap_default_positioning":false,"banner_background_image":"","banner_background_image_dark":"","background_color":"#E4ECFA","background_color_dark":"","primary_text_color":"#232a3d","primary_text_color_dark":"","secondary_text_color":"#232a3d","secondary_text_color_dark":"","link_text_color":"#0f82af","link_text_color_dark":"","main_heading_content":"\u003ch2 class=\"x-title\"\u003e\n Meet our Community Champions for this week!\n\u003c/h2\u003e\n\u003cdiv class=\"description\"\u003e\n   \u003cp\u003e\n    This week, we have many Community Champions from various categories. Check them all  \u003ca href=\"https://community.dataquest.io/t/meet-our-community-champions-for-this-week/559518/73?u=elena_kosourova\"\u003ehere\u003c/a\u003e.  Among them, there are even two double-Champions!\n  \u003c/p\u003e\n\u003c/div\u003e","first_column_content":"","second_column_content":"","third_column_content":"","fourth_column_content":"","first_column_size":"auto","second_column_size":"auto","third_column_size":"auto","fourth_column_size":"","first_column_icon":"cog","second_column_icon":"https://d11a6trkgmumsb.cloudfront.net/original/3X/b/3/b33be9538df3547fcf9d1a51a4637d77392ac6f9.png","third_column_icon":"wrench","fourth_column_icon":""});
  }
})();
(function() {
  if ('Ember' in window) {
    Ember.TEMPLATES["javascripts/connectors/custom-banner/banner"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[0,\"\\n  \"],[1,[28,\"mount-widget\",null,[[\"widget\"],[\"banner-box-widget\"]]],false],[0,\"\\n\"]],\"hasEval\":false}","meta":{}});
  }
})();
(function() {
  if ('Ember' in window) {
    Ember.TEMPLATES["javascripts/connectors/below-site-header/banner-themes"] = Ember.HTMLBars.template({"id":null,"block":"{\"symbols\":[],\"statements\":[[0,\"\\n\"],[4,\"if\",[[28,\"theme-setting\",[7,\"show_for_members\"],null]],null,{\"statements\":[[4,\"if\",[[24,[\"currentUser\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"tagName\",\"connectorTagName\"],[\"custom-banner\",\"span\",\"div\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[4,\"if\",[[28,\"theme-setting\",[7,\"show_for_anon\"],null]],null,{\"statements\":[[4,\"unless\",[[24,[\"currentUser\"]]],null,{\"statements\":[[0,\"      \"],[1,[28,\"plugin-outlet\",null,[[\"name\",\"tagName\",\"connectorTagName\"],[\"custom-banner\",\"span\",\"div\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}","meta":{}});
  }
})();
if ('define' in window) {
define("discourse/theme-7/initializers/theme-field-17-common-html-script-1", ["exports", "discourse/lib/plugin-api"], function (_exports, _pluginApi) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  var settings = require("discourse/lib/theme-settings-store").getObjectForTheme(7);

  var themePrefix = function themePrefix(key) {
    return "theme_translations.7.".concat(key);
  };

  var _default = {
    name: "theme-field-17-common-html-script-1",
    after: "inject-objects",
    initialize: function initialize() {
      (0, _pluginApi.withPluginApi)("0.8.18", function (api) {
        var _require = require("discourse-common/lib/icon-library"),
            iconNode = _require.iconNode,
            convertIconClass = _require.convertIconClass;

        var cookie = require("discourse/lib/cookie").default;

        var _require2 = require("discourse/lib/cookie"),
            removeCookie = _require2.removeCookie;

        var h = require("virtual-dom").h;

        var columnIcons = [settings.first_column_icon, settings.second_column_icon, settings.third_column_icon, settings.fourth_column_icon];
        var cookieExpDate;

        if (settings.cookie_lifespan == "none") {
          removeCookie("banner_closed", {
            path: '/'
          });
          removeCookie("banner_collapsed", {
            path: '/'
          });
        } else {
          cookieExpDate = moment().add(1, settings.cookie_lifespan).toDate();
        }

        var toggleState;

        function setupBanner() {
          var collapsedCookie;
          var closedCookie;

          if (cookie("banner_collapsed")) {
            collapsedCookie = JSON.parse(cookie("banner_collapsed"));

            if (collapsedCookie.name != settings.cookie_name) {
              removeCookie("banner_collapsed", {
                path: '/'
              });
            }
          }

          if (cookie("banner_closed")) {
            closedCookie = JSON.parse(cookie("banner_closed"));

            if (closedCookie.name != settings.cookie_name) {
              removeCookie("banner_closed", {
                path: '/'
              });
            }
          }

          if (!cookie("banner_collapsed") && settings.collapsible && settings.default_collapsed_state == "collapsed" || collapsedCookie && collapsedCookie.collapsed == "true") {
            toggleState = "collapsed";
            return ".hidden-banner";
          } else {
            toggleState = "expanded";
            return "";
          }
        }

        api.createWidget("banner-box-widget", {
          tagName: "div.banner-box",
          html: function html(attrs) {
            var path = window.location.pathname;
            var showOnHomepage;

            if (settings.display_on_homepage) {
              showOnHomepage = path === "/";
            }

            var urlMatch;

            if (settings.url_must_contain.length) {
              var allowedPaths = settings.url_must_contain.split("|");
              urlMatch = allowedPaths.some(function (allowedPath) {
                if (allowedPath.slice(-1) === "*") {
                  return path.indexOf(allowedPath.slice(0, -1)) === 0;
                }

                return path === allowedPath;
              });
            }

            if (!cookie("banner_closed") && (showOnHomepage || urlMatch)) {
              return [h('div.container', [this.attach("banner-button-container-widget"), h('div.section-header', {
                innerHTML: settings.main_heading_content
              }), this.attach('banner-content-widget')])];
            }
          }
        });
        api.decorateWidget('banner-box-widget:after', function (helper) {
          helper.widget.appEvents.on('page:changed', function () {
            helper.widget.scheduleRerender();
          });
        });
        api.createWidget("banner-button-container-widget", {
          tagName: "div.button-container",
          html: function html(attrs) {
            var buttons = [];

            if (settings.dismissible) {
              buttons.push(this.attach("button", {
                label: themePrefix("close.label"),
                title: themePrefix("close.title"),
                icon: "times",
                action: "buttonPressed",
                actionParam: "close",
                className: "close"
              }));
            }

            if (settings.collapsible) {
              buttons.push(this.attach("button", {
                label: this.toggleLabel(),
                title: themePrefix("toggle.title"),
                icon: this.toggleIcon(),
                action: "buttonPressed",
                actionParam: "toggle",
                className: "toggle"
              }));
            }

            return buttons;
          },
          buttonPressed: function buttonPressed(button) {
            if (button == "close") {
              $(".banner-box").addClass("hidden");

              if (cookieExpDate) {
                var bannerState = {
                  name: settings.cookie_name,
                  closed: "true"
                };
                cookie("banner_closed", JSON.stringify(bannerState), {
                  expires: cookieExpDate,
                  path: '/'
                });
              }
            } else if (button == "toggle") {
              toggleState = toggleState === "expanded" ? "collapsed" : "expanded";
              $("#banner-content_wrap").slideToggle();

              if (cookieExpDate) {
                var _bannerState;

                if (cookie("banner_collapsed")) {
                  _bannerState = JSON.parse(cookie('banner_collapsed'));
                  _bannerState.name = settings.cookie_name;

                  if (_bannerState.collapsed == "false") {
                    _bannerState.collapsed = "true";
                  } else {
                    _bannerState.collapsed = "false";
                  }
                } else {
                  if (settings.default_collapsed_state == "collapsed") {
                    _bannerState = {
                      name: settings.cookie_name,
                      collapsed: "false"
                    };
                  } else {
                    _bannerState = {
                      name: settings.cookie_name,
                      collapsed: "true"
                    };
                  }
                }

                cookie("banner_collapsed", JSON.stringify(_bannerState), {
                  expires: cookieExpDate,
                  path: '/'
                });
              }
            }
          },
          toggleIcon: function toggleIcon() {
            return toggleState === "expanded" ? "chevron-up" : "chevron-down";
          },
          toggleLabel: function toggleLabel() {
            return toggleState === "expanded" ? themePrefix("toggle.collapse_label") : themePrefix("toggle.expand_label");
          }
        });
        api.createWidget("banner-column-icon", {
          tagName: "div.icon",
          html: function html(attrs) {
            var columnIcon = columnIcons[attrs.column];

            if (columnIcon.includes("http") || columnIcon.includes("/uploads/")) {
              return h("img.responsive-img", {
                src: columnIcon
              });
            } else if (columnIcon) {
              var covertedIcon = convertIconClass(columnIcons[attrs.column]);
              return iconNode(covertedIcon);
            }

            return;
          }
        });
        api.createWidget("banner-content-widget", {
          tagName: "div#banner-content_wrap" + setupBanner(),
          html: function html(attrs) {
            var columns = [];

            if (settings.first_column_content) {
              columns.push(h('div.first_column.single-box', [this.attach('banner-column-icon', {
                column: 0
              }), h('div', {
                innerHTML: settings.first_column_content
              })]));
            }

            if (settings.second_column_content) {
              columns.push(h('div.second_column.single-box', [this.attach('banner-column-icon', {
                column: 1
              }), h('div', {
                innerHTML: settings.second_column_content
              })]));
            }

            if (settings.third_column_content) {
              columns.push(h('div.third_column.single-box', [this.attach('banner-column-icon', {
                column: 2
              }), h('div', {
                innerHTML: settings.third_column_content
              })]));
            }

            if (settings.fourth_column_content) {
              columns.push(h('div.fourth_column.single-box', [this.attach('banner-column-icon', {
                column: 3
              }), h('div', {
                innerHTML: settings.fourth_column_content
              })]));
            }

            return h('div.row', columns);
          }
        });
      });
    }
  };
  _exports.default = _default;
});
}
